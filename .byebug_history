exit
params
exit
params
exit
params
mangaId
Review.select(:id).find_by(manga_id: params[:mangaId].to_i)
current_user
params
exit
quit
exit
next
step
@value
step
key
step
attributes[name]
name
step
name
step
@attributes
step
@module
step
object
step
object
step
attributes
object
@person
step
@reviews
@review
exit
step
json.extract! @review, :id, :user_id, :manga_id, :rating, :title, :description, :username
:id
@review
@reivew
exit
json.extract! review, :user_id, :manga_id, :rating, :title, :description
@reviews
next
step
@reviews
exit
Review.filter(params[:id])
params[:id]
params
Manga.find(2).bookshelves
exit
next
step
next
@reviews
exit
params
parms
exit
Manga.find(3).bookshelves
manga_id
exit
next
Manga.find(manga_id)
manga_id
exit
p manga_id
manga_id
params[:id]
manga_id
next
params[:id]
params
exit
mangaId
exit
Manga.find(2)
manga_id
c
exit
Bookshelf.all
shelf_name
current_user.bookshelves
exit
MangaStatus.where(user_id: 4, manga_id: 1)
MangaStatus.where(user_id: 4)
MangaStatus
@status
exit
next
check.valid?
check = MangaBookshelf.new(manga_id: 8, bookshelf_id: 11)
new_id[0]
new_id
next
new_id
next
new_id
example.valid?
example = MangaStatus.new(user_id: 4, manga_id: 8, status: "Want-To-Read")
@status
next
@status
exit
s
@current_user
s
skip
end
@current_user
current_user
@user
exit
const_name
step
exit
@user
next
@user
